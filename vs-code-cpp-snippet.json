{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Main BoilerCode": {
		"prefix": "main",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"int main(){",
			"   $1",
			"",
			"   return 0;",
			"}"
		],
		"description": "Log output to console"
	},
	"Competetive BoilerCode": {
		"prefix": "main",
		"body": [
			"#include <bits/stdc++.h>",
			"typedef long long ll;",
			"",
			"using namespace std;",
			"",	
			"void solution(){",
			"   ",
			"   int testCase;",
			"   cin >> testCase;",
			"   for(int _i = 0; _i < testCase; _i++){",
			"       $1",
			"       ",
			"   }",
			"   ",
			"}",
			"",
			"// Ignored by Online Judges",
			"void setUp_ForLocalMachine(){",
			"",
			"   #ifndef ONLINE_JUDGE",
			"   // if \"input.txt\" not exist : Create",
			"   std::ifstream infile(\"input.txt\");",
			"   if(!infile.good()){",
			"       ofstream MyFile(\"input.txt\");",
			"       MyFile << \"3\"; // writing example case",
			"    }",
		 
			"   freopen(\"input.txt\", \"r\", stdin);",
			"   freopen(\"output.txt\", \"w\", stdout);",
			"   #endif",
			" }",
			" ",
			" ",
			" int main(){",
			"   ios_base:: sync_with_stdio(false);",
			"   cin.tie(NULL);",
			"",
			"   setUp_ForLocalMachine();",
			"   solution();",
			"   return 0;",
			" }",
		],
		"description": "Ready code for Competetive Programming"
	},
	"Print BiolerCode": {
		"prefix": "cout",
		"body": [
			"cout<< \"$1\" <<endl;"
		],
		"description": "Log output to console"
	}
}
